package com.starfish.kol.android.controller;

import android.view.View;

import com.starfish.kol.android.screen.Screen;
import com.starfish.kol.android.util.AndroidProgressHandler;
import com.starfish.kol.model.Model;

public abstract class ModelController<C, M extends Model<C>> implements Controller {
	/**
	 * Autogenerated by eclipse.
	 */
	private static final long serialVersionUID = 5761904333216584549L;
	
	private M model;
	private transient AndroidProgressHandler<C> callback;
	
	public ModelController(M model) {
		this.model = model;
	}
	
	@Override
	public void connect(final View view, final Screen host) {
		if(callback != null) {
			callback.close();
		}
		
		this.callback = new AndroidProgressHandler<C>() {
			@Override
			public void recieveProgress(C message) {
				ModelController.this.recieveProgress(view, model, message, host);
			}
		};
		
		this.model.connectView(callback, host.getViewContext());
		
		this.connect(view, model, host);
	}
	
	public abstract void connect(View view, M model, Screen host);
	public abstract void recieveProgress(View view, M model, C message, Screen host);
	
	public void recieveProgress(View view, M model, Void message, Screen host) {
		// do nothing by default, if the message type is void.
	}
		
	@Override
	public void disconnect(Screen host) {
		callback.close();
	}

	protected void setModel(M model) {
		this.model = model;
	}
	
	public M getModel() {
		return model;
	}
}

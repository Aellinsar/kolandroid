package com.starfish.kol.android.controller;

import android.support.v4.app.FragmentTransaction;
import android.util.Log;
import android.view.View;

import com.starfish.kol.android.R;
import com.starfish.kol.android.game.GameFragment;
import com.starfish.kol.android.game.fragments.SkillsFragment;
import com.starfish.kol.android.screen.Screen;
import com.starfish.kol.android.screen.ScreenSelection;
import com.starfish.kol.android.view.ModelWrapper;
import com.starfish.kol.model.Model;
import com.starfish.kol.model.models.ChoiceModel;
import com.starfish.kol.model.models.CraftingModel;
import com.starfish.kol.model.models.WebModel;
import com.starfish.kol.model.models.fight.FightModel;
import com.starfish.kol.model.models.inventory.InventoryModel;
import com.starfish.kol.model.models.skill.SkillsModel;

public class GameFragmentController<C, M extends Model<C>> extends ModelController<C, M> {
	/**
	 * Autogenerated by eclipse.
	 */
	private static final long serialVersionUID = 2814970067696949816L;

	public GameFragmentController(M model) {
		super(model);
	}
	
	@Override
	public int getView() {
		return R.layout.controller_stopgap;
	}

	@Override
	public void disconnect() {
		// do nothing
	}

	@Override
	public void chooseScreen(ScreenSelection choice) {
		choice.displayPrimary(this);
	}

	@Override
	public void connect(View view, M model, Screen host) {
		GameFragment<?, ?> fragment;

		Class<?> type = model.getClass();
		
		if (type == WebModel.class) {
			throw new RuntimeException("WebModel should not be using this controller any more");
		} else if (type == FightModel.class) {
			throw new RuntimeException("FightModel should not be using this controller any more");
		} else if (type == ChoiceModel.class) {
			throw new RuntimeException("ChoiceModel should not be using this controller any more");
		} else if (type == InventoryModel.class) {
			throw new RuntimeException("InventoryModel should not be using this controller any more");
		} else if (type == SkillsModel.class) {
			fragment = new SkillsFragment();
		} else if (type == CraftingModel.class) {
			throw new RuntimeException("CraftingModel should not be using this controller any more");
		} else {
			Log.e("FragmentStack", "Unable to match view to model " + type);
			return;
		}
		
		fragment.setArguments(ModelWrapper.bundle(model));
		FragmentTransaction trans = host.getFragmentManager().beginTransaction()
				.replace(R.id.stopgap_mainfragment, fragment);
		trans.commit();
	}

}

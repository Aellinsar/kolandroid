package com.starfish.kol.model.util;

import com.starfish.kol.connection.Connection.ServerReply;
import com.starfish.kol.connection.Session;
import com.starfish.kol.model.Model;
import com.starfish.kol.model.util.LiveModel.LiveMessage;
import com.starfish.kol.request.ResponseHandler;
import com.starfish.kol.request.Request;

public abstract class LiveModel extends Model<LiveMessage> {
	/**
	 * Autogenerated by eclipse.
	 */
	private static final long serialVersionUID = 6439988316319232465L;

	private final String updateUrl;
	private boolean filling;
	private boolean shouldRedirect;

	public LiveModel(Session s, String updateUrl, boolean redirectOnUnknownResponse) {
		super(s);
		
		this.filling = false;
		this.updateUrl = updateUrl;
		this.shouldRedirect = redirectOnUnknownResponse;
	}
	
	public final void process(ServerReply response) {
		this.filling = true;
		this.loadContent(response);
		this.notifyView(LiveMessage.REFRESH);
	}

	protected abstract void loadContent(ServerReply content);

	public void update() {
		Request update = new Request(this.updateUrl, new ResponseHandler() {
			@Override
			public boolean handle(Session session, Request request,
					ServerReply response) {
				if (response.url.contains(updateUrl)) {
					updateBase(response);
					process(response);
				} else {
					if(shouldRedirect)
						getGameHandler().handle(session, request, response);
					else
						System.out.println("LiveModel expected " + updateUrl + " but was redirected to " + response.url);
				}
				return true;
			}
		});
		makeRequest(update);
	}
	
	public void access() {
		if (this.filling)
			return;
		this.filling = true;

		this.update();
	}

	public static enum LiveMessage {
		REFRESH
	}

}
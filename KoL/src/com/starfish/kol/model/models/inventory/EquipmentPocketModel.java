package com.starfish.kol.model.models.inventory;

import java.io.Serializable;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.ArrayList;

import com.starfish.kol.connection.Connection.ServerReply;
import com.starfish.kol.connection.Session;
import com.starfish.kol.model.basic.ActionItem;
import com.starfish.kol.model.basic.BasicAction;
import com.starfish.kol.model.basic.BasicGroup;
import com.starfish.kol.model.basic.OptionItem;
import com.starfish.kol.model.interfaces.DeferredGameAction;
import com.starfish.kol.model.interfaces.ModelGroup;
import com.starfish.kol.util.Regex;

public class EquipmentPocketModel extends InventoryPocketModel {
	/**
	 * Autogenerated by eclipse.
	 */
	private static final long serialVersionUID = -4393723486745747928L;

	private static final Regex EQUIPMENT = new Regex(
			"<table[^>]*curequip[^>]*>.*?</table>", 0);
	private static final Regex ITEM_EQUIPPED = new Regex("<tr>.*?(?=</?tr>)", 0);
	
	private static final Regex OUTFITS = OptionItem.regexFor("whichoutfit");
	
	private ArrayList<ModelGroup<ActionItem>> outfits = new ArrayList<ModelGroup<ActionItem>>();
	
	public EquipmentPocketModel(Session s, String updateUrl) {
		super(s, updateUrl);
	}

	protected void loadContent(ServerReply reply) {
		super.loadContent(reply);
		
		String equipment = EQUIPMENT.extractSingle(reply.html);
		if (equipment != null) {
			ModelGroup<InventoryItem> equipped = parseItems("Equipped",
					ITEM_EQUIPPED.extractAllSingle(equipment));
			if (equipped.size() > 0)
				items.add(0, equipped);
		}

		String baseaction = "inv_equip.php?action=outfit&which=2&whichoutfit=";
		
		outfits = new ArrayList<ModelGroup<ActionItem>>();
		String outfit_select = OUTFITS.extractSingle(reply.html);
		ArrayList<ModelGroup<OptionItem>> outfit_options = OptionItem.extractOptionGroups(outfit_select, "Outfits");
		for(ModelGroup<OptionItem> outfit_group : outfit_options) {
			BasicGroup<ActionItem> group = new BasicGroup<ActionItem>(outfit_group.getName());
			System.out.println("Found new outfit group of size " + outfit_group.size());
			for(OptionItem option : outfit_group) {
				if(option.text.contains("(select an outfit)")) continue;
				
				group.add(new ActionItem(getSession(), option.text, option.img, baseaction + option.value));
			}
			outfits.add(group);
		}
	}
	
	public ArrayList<ModelGroup<ActionItem>> getOutfits() {
		this.access();
		return outfits;
	}
	
	public CustomOutfitBuilder saveOutfit() {
		return new CustomOutfitBuilder();
	}
	
	public class CustomOutfitBuilder implements Serializable
	{
		/**
		 * Autogenerated by eclipse.
		 */
		private static final long serialVersionUID = 4232930772541155466L;

		public DeferredGameAction saveOutfit(String name) {
			String baseAction = "inv_equip.php?which=2&action=customoutfit&outfitname=";
			
			try {
				name = URLEncoder.encode(name, "UTF-8")
				        .replaceAll("\\+", "%20")
				        .replaceAll("\\%21", "!")
				        .replaceAll("\\%27", "'")
				        .replaceAll("\\%28", "(")
				        .replaceAll("\\%29", ")")
				        .replaceAll("\\%7E", "~");
			} catch (UnsupportedEncodingException e) {
				System.out.println("Unable to URL-Encode outfit name");
				e.printStackTrace();
			}
			
			return new BasicAction(getSession(), baseAction + name);
		}
	}
}

package com.starfish.kol.model.models.chat;

import java.io.Serializable;
import java.util.ArrayList;

import com.starfish.kol.model.interfaces.DeferredAction;

public class ChatChannel implements Serializable {
	/**
	 * Autogenerated by eclipse.
	 */
	private static final long serialVersionUID = 2715348203091892066L;
	
	private final ArrayList<ChatText> messages;
	private final String name;

	private boolean active;
	
	public ChatChannel(String name) {
		this.name = name;
		this.active = name.contains("@");
		
		this.messages = new ArrayList<ChatText>();
	}

	public String getName() {
		return this.name;
	}

	public DeferredAction<ChatModel> enter() {
		return new DeferredAction<ChatModel>() {
			@Override
			public void submit(ChatModel context) {
				if(name.contains("@")) return;
				if(active) return;
				context.submitChat("/listen " + name);
			}			
		};
	}
	
	public DeferredAction<ChatModel> leave() {
		return new DeferredAction<ChatModel>() {
			@Override
			public void submit(ChatModel context) {
				if(name.contains("@")) return;
				if(!active) return;
				context.submitChat("/listen " + name);
			}			
		};
	}
	
	public boolean isActive() {
		return this.active;
	}
	
	protected void setActive(boolean active) {
		System.out.println("Setting channel " + this.name + " active to " + active);
		this.active = active;
	}
	
	protected void addMessage(ChatText message) {
		messages.add(message);
		
		if(message.isEvent()) {
			String text = message.getText();
			if(text.contains("Now listening to channel:"))
				setActive(true);
			if(text.contains("No longer listening to channel:"))
				setActive(false);
			if(text.contains("You are now talking in channel:"))
				setActive(true);
		}
	}

	public ArrayList<ChatText> getMessages() {
		return new ArrayList<ChatText>(messages);
	}
}
package com.starfish.kol.model;

import java.io.Serializable;

import com.starfish.kol.connection.Connection.ServerReply;
import com.starfish.kol.connection.Session;
import com.starfish.kol.request.Request;
import com.starfish.kol.request.ResponseHandler;
import com.starfish.kol.request.SimulatedRequest;

public abstract class Model<Callback> implements Serializable, GameRequestHandler {
	/**
	 * Autogenerated by eclipse.
	 */
	private static final long serialVersionUID = -7378509328924319346L;
	
	private transient GameModel parent;
	private transient Session session;
	private transient ProgressHandler<Callback> view;
	
	private ServerReply lastReply;
	
	public Model() {
		this.lastReply = null;
	}
	
	public Model(ServerReply base) {
		this.lastReply = base;
	}
	
	protected void updateBase(ServerReply newBase) {
		this.lastReply = newBase;
	}
	
	protected ServerReply getBase() {
		return lastReply;
	}
	
	public void simulateWebRequest() {
		this.makeRequest(new SimulatedRequest(lastReply, "http://www.kingdomofloathing.com/fake.php", lastReply.html));
	}
	
	public void ping() {
		this.makeRequest(new Request("game.php", new ResponseHandler(){
			@Override
			public boolean handle(Session session, Request request,
					ServerReply response) {
				//Ignore if this request was redirected
				return response.url.contains("game.php");
			}
		}));
	}
	
	protected void connect(GameModel parent, Session session) {
		this.parent = parent;
		this.session = session;
	}
	
	public void connectView(ProgressHandler<Callback> view) {
		this.view = view;
	}
	
	protected void notifyView(Callback message) {
		if(this.view != null)
			this.view.reportProgress(message);;
	}
	
	public void makeRequest(Request req) {
		session.handle(req);
	}

	public <E extends Model<?>> void displayModel(Class<E> type, E model) {
		parent.displayModel(type, model);
	}
}

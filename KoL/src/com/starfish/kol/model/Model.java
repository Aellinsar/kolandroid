package com.starfish.kol.model;

import java.io.Serializable;

import com.starfish.kol.connection.ServerReply;
import com.starfish.kol.connection.Session;
import com.starfish.kol.gamehandler.GameHandler;
import com.starfish.kol.gamehandler.ViewContext;
import com.starfish.kol.request.ResponseHandler;
import com.starfish.kol.request.Request;
import com.starfish.kol.request.SimulatedRequest;

public abstract class Model<Callback> implements Serializable {
	/**
	 * Autogenerated by eclipse.
	 */
	private static final long serialVersionUID = -7378509328924319346L;
	
	private transient ProgressHandler<Callback> view;
	private transient GameHandler mainGame;

	private final Session session;
	private ServerReply lastReply;
	
	public Model(Session s) {
		this.session = s;
		this.lastReply = null;
	}
	
	public Model(Session s, ServerReply base) {
		this.session = s;
		this.lastReply = base;
	}
	
	protected void updateBase(ServerReply newBase) {
		this.lastReply = newBase;
	}
	
	protected ServerReply getBase() {
		return lastReply;
	}
	
	public void simulateWebRequest() {
		this.makeRequest(new SimulatedRequest(lastReply, "http://www.kingdomofloathing.com/fake.php", lastReply.html, mainGame));
	}
	
	public void connectView(ProgressHandler<Callback> view, ViewContext context) {
		this.view = view;
		this.mainGame = new GameHandler(context);
	}
	
	protected void notifyView(Callback message) {
		if(this.view != null)
			this.view.reportProgress(message);
	}
	
	protected void makeRequest(Request req) {
		req.makeAsync(session);
	}
	
	protected ResponseHandler getGameHandler() {
		return mainGame;
	}
	
	public Session getSession() {
		return session;
	}
}

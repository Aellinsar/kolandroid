package com.github.kolandroid.kol.android.controllers.chat;

import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;

import com.github.kolandroid.kol.android.R;
import com.github.kolandroid.kol.android.binders.TextBinder;
import com.github.kolandroid.kol.android.screen.Screen;
import com.github.kolandroid.kol.android.screen.ScreenSelection;
import com.github.kolandroid.kol.android.util.HandlerCallback;
import com.github.kolandroid.kol.android.util.adapters.ListAdapter;
import com.github.kolandroid.kol.model.models.chat.ChatAction;
import com.github.kolandroid.kol.model.models.chat.ChatModel;
import com.github.kolandroid.kol.model.models.chat.ChatModelSegment;
import com.github.kolandroid.kol.model.models.chat.ChatStubModel;
import com.github.kolandroid.kol.model.models.chat.ChatText;

import java.util.ArrayList;

public class ChatActionsController extends ChatStubController {
    /**
     * Autogenerated by eclipse.
     */
    private static final long serialVersionUID = 7974380804392024382L;

    private final ChatText base;

    public ChatActionsController(ChatModel model, ChatText base) {
        super(new ChatStubModel(model));
        this.base = base;
    }

    @Override
    public int getView() {
        return R.layout.dialog_chat_screen;
    }

    @Override
    public void doConnect(View view, ChatStubModel model, final Screen host) {
        ArrayList<ChatAction> actions = base.getActions();
        ListAdapter<ChatAction> adapter = new ListAdapter<ChatAction>(host.getActivity(), actions, TextBinder.ONLY);

        final HandlerCallback<String> fillChatText = new HandlerCallback<String>() {
            @Override
            public void receiveProgress(String message) {
                ChatActionsControllerHost activity = (ChatActionsControllerHost) host.getActivity();
                activity.fillChatText(message);
            }
        };

        ListView list = (ListView) view.findViewById(R.id.dialog_chat_list);
        list.setAdapter(adapter);
        list.setOnItemClickListener(new OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> ad, View list, int pos,
                                    long arg3) {
                ChatAction select = (ChatAction) ad.getItemAtPosition(pos);
                select.attachView(host.getViewContext());
                select.submit(base, fillChatText.weak(), getModel());
                host.close();
            }
        });
    }

    @Override
    public void receiveProgress(View view, ChatStubModel model, Iterable<ChatModelSegment> message, Screen host) {
        // do nothing
    }

    @Override
    public void chooseScreen(ScreenSelection choice) {
        choice.displayDialog(this);
    }


    public interface ChatActionsControllerHost {
        void fillChatText(String text);
    }
}

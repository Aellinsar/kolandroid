package com.github.kolandroid.kol.android.controllers.inventory;

import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import com.github.kolandroid.kol.android.R;
import com.github.kolandroid.kol.android.controller.ModelController;
import com.github.kolandroid.kol.android.controllers.web.WebController;
import com.github.kolandroid.kol.android.screen.Screen;
import com.github.kolandroid.kol.android.screen.ScreenSelection;
import com.github.kolandroid.kol.android.screen.ViewScreen;
import com.github.kolandroid.kol.android.util.ImageDownloader;
import com.github.kolandroid.kol.model.elements.MultiActionElement;
import com.github.kolandroid.kol.model.models.WebModel;
import com.github.kolandroid.kol.model.models.inventory.ItemModel;
import com.github.kolandroid.kol.util.Logger;

public class ItemController extends ModelController<ItemModel> {
    /**
     * Autogenerated by eclipse.
     */
    private static final long serialVersionUID = 2863460893944088836L;

    public ItemController(ItemModel base) {
        super(base);
    }

    @Override
    public int getView() {
        return R.layout.item_view;
    }

    @Override
    public void attach(View view, ItemModel model, final Screen host) {
        WebModel description = model.getDescription();
        if (description == null) {
            // Display image/name of the item as a backup
            TextView text = (TextView) view.findViewById(R.id.item_name);
            text.setText(model.getText());
            text.setVisibility(View.VISIBLE);

            if (model.getImage() != null && !model.getImage().equals("")) {
                ImageView img = (ImageView) view.findViewById(R.id.item_image);
                img.setVisibility(View.VISIBLE);
                ImageDownloader.loadFromUrl(img, model.getImage());
            }
        } else {
            ViewScreen desc = (ViewScreen) view.findViewById(R.id.item_description_screen);
            desc.display(new WebController(description), host);
        }

        ViewGroup group = (ViewGroup) view.findViewById(R.id.item_action_group);
        for (MultiActionElement invAction : model.getActions()) {
            ViewScreen newScreen = new ViewScreen(host.getActivity());
            newScreen.display(new MultiActionController(invAction, true), host);
            group.addView(newScreen);
            Logger.log("ItemController", invAction.toString());
        }
    }

    @Override
    public void chooseScreen(ScreenSelection choice) {
        choice.displayDialog(this);
    }

}

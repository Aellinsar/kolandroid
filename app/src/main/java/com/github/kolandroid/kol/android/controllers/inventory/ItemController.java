package com.github.kolandroid.kol.android.controllers.inventory;

import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;

import com.github.kolandroid.kol.android.R;
import com.github.kolandroid.kol.android.binders.ElementBinder;
import com.github.kolandroid.kol.android.controller.Controller;
import com.github.kolandroid.kol.android.controller.ModelController;
import com.github.kolandroid.kol.android.controllers.MultiusableController;
import com.github.kolandroid.kol.android.controllers.web.WebController;
import com.github.kolandroid.kol.android.screen.DialogScreen;
import com.github.kolandroid.kol.android.screen.Screen;
import com.github.kolandroid.kol.android.screen.ScreenSelection;
import com.github.kolandroid.kol.android.screen.ViewScreen;
import com.github.kolandroid.kol.android.util.adapters.ListAdapter;
import com.github.kolandroid.kol.model.elements.interfaces.DeferredGameAction;
import com.github.kolandroid.kol.model.elements.interfaces.Multiuseable;
import com.github.kolandroid.kol.model.models.WebModel;
import com.github.kolandroid.kol.model.models.inventory.InventoryAction;
import com.github.kolandroid.kol.model.models.inventory.InventoryActionVisitor;
import com.github.kolandroid.kol.model.models.inventory.ItemModel;

public class ItemController extends ModelController<ItemModel> {
    /**
     * Autogenerated by eclipse.
     */
    private static final long serialVersionUID = 2863460893944088836L;

    public ItemController(ItemModel base) {
        super(base);
    }

    @Override
    public int getView() {
        return R.layout.dialog_item_screen;
    }

    @Override
    public void connect(View view, ItemModel model, final Screen host) {
        ListAdapter<InventoryAction> adapter = new ListAdapter<InventoryAction>(host.getActivity(), model.getActions(), ElementBinder.ONLY);

        final InventoryActionVisitor visitor = new InventoryActionVisitor() {
            @Override
            public void executeRequest(DeferredGameAction action) {
                action.submit(host.getViewContext());
            }

            @Override
            public void displayMultiuse(Multiuseable item, String useText) {
                Controller controller = new MultiusableController(item, useText);
                DialogScreen.display(controller, host);
            }
        };

        ListView list = (ListView) view.findViewById(R.id.dialog_item_list);
        list.setAdapter(adapter);
        list.setOnItemClickListener(new OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> ad, View list, int pos,
                                    long arg3) {
                InventoryAction select = (InventoryAction) ad.getItemAtPosition(pos);

                if (select != null) {
                    select.select(visitor);
                    host.close();
                }
            }
        });

        WebModel description = model.getDescription();
        if (description != null) {
            ViewScreen desc = (ViewScreen) view.findViewById(R.id.dialog_item_description);
            desc.display(new WebController(description), host);
        }
    }

    @Override
    public void chooseScreen(ScreenSelection choice) {
        choice.displayDialog(this);
    }

}
